由于后序遍历的顺序是左-右-根，而先序遍历的顺序是根-左-右，二者其实还是很相近的，我们可以先在先序遍历的方法上做些小改动，使其遍历顺序变为根-右-左，然后翻转一下，就是左-右-根啦，，哦反向加入结果res，每次都在结果res的开头加入结点值，而改变先序遍历的顺序就只要该遍历一下入栈顺序，先左后右，这样出栈处理的时候就是先右后左啦

class solution{
public:
         vector<int> Postorder Traversal (TreeNode* root)
          {
              if(root==NULL)
                 return {};
              vector<int> vec;
               stack<TreeNode*> sta;
               TreeNode* p=root;
                while(!sta.empty() || p!==NULL){
                if(p!==NULL)
                 {sta.push(p);  
                 vec.insert(vec.begin(),p->val);
                p=p->right;}
             }else{
              TreeNode* t=sta.top();
               sta.pop();
               p=t->left;
                   }
          }
   return vec;
};
