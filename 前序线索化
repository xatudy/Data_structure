//重要的事情说3遍，这里的Node* & 必须加上引用，要不然上层对prev的修改就是没有意义的.  
     //重要的事情说3遍，这里的Node* & 必须加上引用，要不然上层对prev的修改就是没有意义的.  
     //重要的事情说3遍，这里的Node* & 必须加上引用，要不然上层对prev的修改就是没有意义的.  
     //MD害老子调半天  
  
    void _PreOrderTheeady(Node* cur, Node* & prev)  
    {  
        if (cur == NULL)  
        {  
            return;  
        }  
        //如果是空树链，它的线索化_left指向上一个结点，并标记。  
        if (cur->_letf == NULL)  
        {  
            cur->_letf = prev;  
            cur->_leftType = THREAD;  
        }  
        //如果是空树链，上一个结点的线索化_right指向我，并标记。  
        if (prev&&prev->_right == NULL)  
        {  
            prev->_right = cur;  
            prev->_rightType = THREAD;  
        }  
        prev = cur;  
        //if里的条件 防止重复访问结点  
        if (cur->_leftType == LINK)  
        {  
            _PreOrderTheeady(cur->_letf, prev);  
        }  
        //if里的条件 防止重复访问结点  
        if (cur->_rightType == LINK)  
        {  
            _PreOrderTheeady(cur->_right, prev);  
        }  
    }
